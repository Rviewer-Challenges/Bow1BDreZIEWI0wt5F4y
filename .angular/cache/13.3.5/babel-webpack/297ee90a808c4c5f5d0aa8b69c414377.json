{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"showTime\"];\nexport let InfoGameComponent = /*#__PURE__*/(() => {\n  class InfoGameComponent {\n    constructor() {\n      this.getAttempts = 0;\n      this.getIsMatched = 0;\n      this.getArrayLength = 0;\n      this.sendLoseGame = new EventEmitter();\n      this.seconds = 59;\n      this.showSeconds = 'TIME: 01:00';\n    }\n\n    ngOnChanges() {\n      if (this.getFirstMove == true) {\n        this.getFirstMove = false;\n        this.countDown = setInterval(() => {\n          if (this.getIsMatched == this.getArrayLength) {\n            this.seconds++;\n            clearInterval(this.countDown);\n            document.getElementById('showTime').style.backgroundColor = 'lawngreen';\n            document.getElementById('showTime').style.textAlign = 'center';\n            document.getElementById('attempts').style.backgroundColor = 'lawngreen';\n            document.getElementById('matched').style.backgroundColor = 'lawngreen';\n            this.showSeconds = 'WINNER!';\n          } else if (this.seconds == -1) {\n            this.seconds++;\n            clearInterval(this.countDown);\n            document.getElementById('showTime').style.backgroundColor = 'red';\n            document.getElementById('showTime').style.textAlign = 'center';\n            document.getElementById('attempts').style.backgroundColor = 'red';\n            document.getElementById('matched').style.backgroundColor = 'red';\n            this.sendLoseGame.emit(true);\n            this.showSeconds = 'LOSER!';\n          } else if (this.seconds < 10) {\n            this.showSeconds = 'TIME: 00:0' + this.seconds--;\n          } else {\n            this.showSeconds = 'TIME: 00:' + this.seconds--;\n          }\n        }, 1000);\n      }\n    }\n\n    setShowChooseLevel() {\n      this.sendShowChooseLevel.emit(true);\n      clearInterval(this.countDown);\n    }\n\n  }\n\n  InfoGameComponent.ɵfac = function InfoGameComponent_Factory(t) {\n    return new (t || InfoGameComponent)();\n  };\n\n  InfoGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoGameComponent,\n    selectors: [[\"app-info-game\"]],\n    viewQuery: function InfoGameComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.showTime = _t.first);\n      }\n    },\n    inputs: {\n      getFirstMove: \"getFirstMove\",\n      getAttempts: \"getAttempts\",\n      getIsMatched: \"getIsMatched\",\n      getArrayLength: \"getArrayLength\",\n      sendShowChooseLevel: \"sendShowChooseLevel\"\n    },\n    outputs: {\n      sendLoseGame: \"sendLoseGame\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 13,\n    vars: 4,\n    consts: [[\"id\", \"bar-info\"], [\"id\", \"info-game\"], [\"infoGame\", \"\"], [\"id\", \"attempts\"], [\"id\", \"matched\"], [\"id\", \"info-time\"], [\"id\", \"showTime\"], [\"showTime\", \"\"], [\"id\", \"btn-back\", 3, \"click\"]],\n    template: function InfoGameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2)(3, \"p\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"p\", 6, 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function InfoGameComponent_Template_button_click_11_listener() {\n          return ctx.setShowChooseLevel();\n        });\n        i0.ɵɵtext(12, \"BACK\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"ATTEMPTS: \", ctx.getAttempts, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"MATCHED: \", ctx.getIsMatched, \"/\", ctx.getArrayLength, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.showSeconds);\n      }\n    },\n    styles: [\"*[_ngcontent-%COMP%]{color:#fff;margin:0;padding:0;box-sizing:border-box}#bar-info[_ngcontent-%COMP%]{display:flex}#info-game[_ngcontent-%COMP%]{display:flex;justify-content:center}#info-time[_ngcontent-%COMP%]{display:flex}#attempts[_ngcontent-%COMP%], #matched[_ngcontent-%COMP%], #showTime[_ngcontent-%COMP%]{font-family:rmfont;text-align:left;width:210px;height:auto;padding:10px;font-size:2em;margin:20px;color:#000;background-color:#00b2c8;border:3px solid black;border-radius:25px;box-shadow:0 0 10px #0f3,0 0 10px #0f3,0 0 20px #04f466,0 0 20px #04f466,0 0 20px #04f466;cursor:pointer}#btn-back[_ngcontent-%COMP%]{font-family:rmfont;text-align:center;width:200px;height:auto;padding:10px;font-size:2em;margin:20px;color:#000;background-color:#00b2c8;border:3px solid black;border-radius:25px;box-shadow:0 0 10px #0f3,0 0 10px #0f3,0 0 20px #04f466,0 0 20px #04f466,0 0 20px #04f466;cursor:pointer}@media screen and (max-width: 450px) and (orientation: portrait){#info-game[_ngcontent-%COMP%], #info-time[_ngcontent-%COMP%]{flex-direction:column}#showTime[_ngcontent-%COMP%], #attempts[_ngcontent-%COMP%], #matched[_ngcontent-%COMP%], #btn-back[_ngcontent-%COMP%]{width:120px;font-size:1em}}@media screen and (max-width: 950px) and (orientation: landscape){#showTime[_ngcontent-%COMP%], #attempts[_ngcontent-%COMP%], #matched[_ngcontent-%COMP%], #btn-back[_ngcontent-%COMP%]{width:120px;font-size:1em}}\"]\n  });\n  return InfoGameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}